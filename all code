const discord = require("discord.js");
const client = new discord.Client();
const bot = new discord.Client();
const token2 = "NjY3MDcwNzY4NzIyNDc3MDY3.XoBJww.YU01zkqWFADXFoGYQaVMLQdf580"//token invalide cheh
const token1 = "NjcyMTcxMDU4MjIwMTA1NzI4.XoBJrw.DnSizfgDI2Xsxksvpbd63gr_p_c"//token invalide cheh
client.login(token2)
bot.login(token1)
const prefix = (',')
//const verified =  message.guild.roles.find(role => role.name === "dm");





client.on('ready', () => {
    let id = ("692318268777693255")// channels
let guildid = ("673278222875623464")// guild
    let myGuild = client.guilds.get(guildid);
    let memberCount = myGuild.memberCount;
    let memberCountChannel = myGuild.channels.get(id);
    memberCountChannel.setName('Joueur: ' + memberCount)
        .then(result => console.log(result))
        .catch(error => console.log(error))
    });


client.on('guildMemberAdd', member => {
    let id = ("692318268777693255")// channels
let guildid = ("673278222875623464")// guild
    let myGuild = client.guilds.get(guildid);
    let memberCount = myGuild.memberCount;
    let memberCountChannel = myGuild.channels.get(id)
    memberCountChannel.setName('Joueur: ' + memberCount)
        .then(result => console.log(result))
        .catch(error => console.log(error));
});
client.on('guildMemberRemove', member => {
    let id = ("692318268777693255")// channels
let guildid = ("673278222875623464")// guild
    let myGuild = client.guilds.get(guildid);
    let memberCount = myGuild.memberCount;
    let memberCountChannel = myGuild.channels.get(id)
    memberCountChannel.setName('Joueur: ' + memberCount)
        .then(result => console.log(result))
        .catch(error => console.log(error));

        //message quand il rejoint
    });
      client.on("guildMemberAdd", (member) => {
        let embed = new discord.RichEmbed()
      .setTitle(`${member.displayName} vient de rejoindre ${member.guild.name}`)
      .setURL("")
      .setThumbnail(member.user.avatarURL)
      .setColor('RANDOM')
      .setDescription(`${member.guild.name} a désormais **${member.guild.members.size}** membres :fire:`)
      .setTimestamp(new Date())
      let role = member.guild.roles.find(r => r.name === '『🎮』Joueur');
      member.addRole(role)
        console.log(`Nouveaux membre "${member.user.username}" a rejoints"${member.guild.name}"` );
        member.guild.channels.find(c => c.id === "673310358693478411").send(embed);
      });
//message quand il quitte
      client.on("guildMemberRemove", (member) => {
        let embed = new discord.RichEmbed()
        .setTitle(`${member.displayName} vient de quitter ${member.guild.name}`)
        .setURL("")
        .setThumbnail(member.user.avatarURL)
        .setColor('RANDOM')
        .setDescription(`${member.guild.name} a désormais **${member.guild.members.size}** membres :fire:`)
        .setTimestamp(new Date())
        console.log(`un membre en moin "${member.user.username}" a quitter"${member.guild.name}"` );
        member.guild.channels.find(c => c.id === "673310358693478411").send(embed);//${member.user.tag} ou ("@" + `${member.user.tag} a quitter le serveur`)
      });

      client.on("message", message => {
        if(message.author.bot || message.channel.type === "dm") return
        if (message.content === 'dm') {
        message.reply("test")
            .catch(console.error);
    }});
    bot.on("message", message => {
        if(message.author.bot) return;
        if(message.content === "reu") {
            let msg = message.content.slice("reu".length);
        
            try {
                message.guild.members.forEach(member => {
                    message.guild.members.find(m => m.send("test"));
                  if(member.id != bot.user.id && !member.user.bot) message.author.send(msg);
                  message.channel
                  .send("envoyer a `" + member.user.username + "`")
                  .then(r => r.delete(3000));
                });
            } catch (e) {
                console.log(e);
            } 
            message.channel.send("envoyer des message prends du temps")}}
            );
           
            bot.on("message", message => {
                if(message.content.startsWith(prefix + "mp")) {
                    
                    var args = message.content.split(" ").slice(1);
                    var msge = args.join(' ');
                    if(!message.guild.member(message.author).hasPermission("ADMINISTRATOR")) return message.channel.send("Tu nas pas la permission pour effectuer cette commande")
                        if(!msge) return message.channel.send("precise un message")
                        message.delete()
                    message.guild.members.map(m => m.send(msge))
            }});
 client.on("message", message => {
                if(message.channel.id != '692462806406135880') return; 
let count = ('0')
if(message.content === count) {message.reply("bien jouer"); }
if(message.author.bot) return; 
if(message.content !== count) {message.delete()}
/*1- cree une base de donner
2- si il reussits a dire la valeurs de la variable tu rajoute +1 a la base de donner ( mettre )
3-
*/





});
let invites = []
client.on('ready', () => {
    // "ready" isn't really ready. We need to wait a spell.
    //wait(1000);
  
    // Load all invites for all guilds and save them to the cache.
    client.guilds.forEach(g => {
      g.fetchInvites().then(guildInvites => {
        invites[g.id] = guildInvites;
      });
    });
  });
  client.on('guildMemberAdd', member => {
      // To compare, we need to load the current invite list.
      member.guild.fetchInvites().then(guildInvites => {
        // This is the *existing* invites for the guild.
        const ei = invites[member.guild.id];
        // Update the cached invites for the guild.
        invites[member.guild.id] = guildInvites;
        // Look through the invites, find the one for which the uses went up.
        const invite = guildInvites.find(i => ei.get(i.code).uses < i.uses);
        // This is just to simplify the message being sent below (inviter doesn't have a tag property)
        const inviter = client.users.get(invite.inviter.id);
        // Get the log channel (change to your liking)
        const logChannel = member.guild.channels.find(channel => channel.id === "693561264458170390");
        // A real basic message with the information we need.
        let embed = new discord.RichEmbed()
      .setTitle(`${member.displayName} vient de rejoindre ${member.guild.name}`)
      .setURL("")
      .setThumbnail(member.user.avatarURL)
      .setColor('RANDOM')
      .setDescription(`${inviter} a désormais **${invite.uses}** invites!!! continue comme sa :fire:`)
      .setTimestamp(new Date()) 
        logChannel.send(embed)})});
        //`${member.user} rejoints par ${inviter}. il a inviter ${invite.uses} perssonne.`/
var userTickets = new Map();

        client.on('ready', () => {
          console.log(client.user.username + "ses connecter");
        });

        client.on('message', message => {
          if(message.author.bot) {
          if(message.embeds.length === 1 && message.embeds [0].description.startsWith('React')) {
            message.react('📨')
            .then(msgReaction => console.log('Reacted,'))
            .catch(err => console.log(err));
           }
            
          };
          if(message.content.toLowerCase() === prefix + "message") {
            message.delete();
            const embed = new discord.RichEmbed();
            embed.setAuthor(client.user.username, client.user.displayAvatarURL);
            embed.setDescription('Réagits aux messages pour ouvrir un ticket!');
            embed.setColor('#F39237');
            message.channel.send(embed).then(async m => {
              m.react('📨');
            });
          }
          if(message.content.toLowerCase() === prefix + 'ticket' && message.channel.id === "673293141134278704") { 
            /*message.delete();
            if(userTickets.has(message.author.id) ||
             message.guild.channels.forEach(channel => channel.name.toLowerCase() === 
             message.author.username + 's-ticket'))  {
               message.author.send("tu a deja un channels pourquoi en faire un autre?!");
           } 
           else {

            
            
            message.delete()
          let guild = message.guild;
          guild.createChannel(`${message.author.username}s-ticket`, {
            type: 'text',
            permissionOverwrites: [
              {
                allow: 'VIEW_CHANNEL',
                id: message.author.id
              },
              {
                deny:"VIEW_CHANNEL",
                id: guild.id 

            },
            {
              allow: 'VIEW_CHANNEL',
              id: "673479056431382529"
            }
            ]
          
        }).then (ch => {
          console.log ("cree " + ch.name + "channel.");
          userTickets.set(message.author.id, ch.id);
        })
           }  
        }*/
         // else//
          if(message.content.toLowerCase() === prefix + 'close'){
                if(userTickets.has(message.author.id) || 
                message.guild.channels.forEach(channel =>
                   channel.name.toLowerCase() === message.author.username + 's-ticket')) {
                  if(message.channel.id === userTickets.get(message.author.id)) {
                    message.channel.delete('fermeture du ticket')
                    .then(channel => {
                      console.log(channel.name + "deleter")
                      userTickets.delete(message.author.id);
                    })
                  }
                }
                  if(message.guild.channels.forEach(channel => channel.name.toLowerCase() ===
                  message.author.username + 's-ticket')) {
                    message.guild.forEach(channel => {
                      if(channel.name.toLowerCase() === message.author.username + 's-ticket') {
                        channel.delete().then(ch => console.log('channel deleter par' + ch.id))
                        .catch(err => console.log(err));
                      }
                    });
                  }
              }
        }});
client.on("messageReactionAdd", payload => {
if(payload.t === 'MESSAGE_REACTION_ADD') {
  if(payload.d.emoji.name != "📨")
  return;
console.log("User a reagits au message");
if(payload.d.message_id === '693940459743215707') {
  let channel = client.channels.get(payload.d.channel_id) // tout les channels quil peut voirs voirs
if(channel.message.has(payload.d.message_id)) {
    return;

} else {
  channel.fetchMessage(payload.d.message_id)
  .then(msg => {
    let reaction = msg.reaction.get('📨')
    let user = client.users.get(payload.d.user_id);
    client.emit('messageReactionAdd', reaction, user);
  })
};
}
}});


        client.on('messageReactionAdd', (reaction,user) => {
          message.delete();
          if(userTickets.has(user.id) ||
           reaction.message.guild.channels.forEach(channel => channel.name.toLowerCase() === 
           user.username + 's-ticket'))  {
             message.author.send("tu a deja un channels pourquoi en faire un autre?!");
         } 
         else {

          
          
          message.delete()
        let guild = reaction.message.guild;
        guild.createChannel(`${user.username}s-ticket`, {
          type: 'text',
          permissionOverwrites: [
            {
              allow: 'VIEW_CHANNEL',
              id: user.id
            },
            {
              deny:"VIEW_CHANNEL",
              id: guild.id 

          },
          {
            allow: 'VIEW_CHANNEL',
            id: "673479056431382529"
          }
          ]
        
      }).then (ch => {
        console.log ("cree " + ch.name + "channel.");
        userTickets.set(user.id, ch.id);
      })
         }

        })
